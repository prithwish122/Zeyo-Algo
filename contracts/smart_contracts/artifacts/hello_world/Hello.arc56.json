{
    "name": "Hello",
    "structs": {},
    "methods": [
        {
            "name": "increment",
            "args": [],
            "returns": {
                "type": "uint64",
                "desc": "The new counter value"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Increments the counter and returns the new value",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "mint",
            "args": [
                {
                    "type": "string",
                    "name": "metaData"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "getLatestMetaData",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "desc": "A contract that increments a counter",
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 4,
                "bytes": 3
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "counter": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "Y291bnRlcg=="
                },
                "globalState": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "Y3VzdG9tS2V5"
                },
                "globalState1": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "Y3VzdG9tS2V5"
                },
                "tokenId": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "dG9rZW5JZA=="
                },
                "tokenDesc": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "dG9rZW5EZXNj"
                },
                "metaData": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "bWV0YURhdGE="
                },
                "nextVal": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "bmV4dFZhbA=="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        136,
                        160,
                        183
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        205
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        139,
                        163,
                        186
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        211,
                        220,
                        232,
                        241,
                        246
                    ],
                    "errorMessage": "check GlobalState exists"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiADAAF7JgUHY291bnRlcgduZXh0VmFsCG1ldGFEYXRhBBUffHUJY3VzdG9tS2V5MRhAAC0oImcnBCRnJwQkZ4ICB3Rva2VuSWQBMWeCAgl0b2tlbkRlc2MAZyqAAGcpImcxG0EAXoIDBEoyWQEEu62DhwTvra1FNhoAjgMAMQAaAAIiQzEZFEQxGESIAGRJFRZXBgJMUCtMULAjQzEZFEQxGEQ2GgFXAgCIADEWK0xQsCNDMRkURDEYRIgAEhYrTFCwI0MxGUD/uTEYFEQjQyIoZUQjCChMZyIoZUSJigEBKov/ZyIpZUQjCClMZyIpZUSJIiplRIk=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 7,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}